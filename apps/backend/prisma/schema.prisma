generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  userType      UserType
  gender        Gender
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  firstName     String         @map("firstName")
  lastName      String         @map("lastName")
  phoneNumber   String?        @map("phoneNumber")
  serviceMember ServiceMember? @relation("UserServiceMember")
  volunteer     Volunteer?     @relation("UserVolunteer")
}

model ServiceMember {
  userId         Int      @id
  country        String?
  state          String?
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  branch         Branch
  addressLineOne String?
  addressLineTwo String?
  zipCode        String?
  city           String?
  user           User     @relation("UserServiceMember", fields: [userId], references: [id], onDelete: Cascade)
}

model Volunteer {
  userId    Int      @id
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation("UserVolunteer", fields: [userId], references: [id], onDelete: Cascade)
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

enum UserType {
  SERVICE_MEMBER
  VOLUNTEER
}

enum Gender {
  MALE
  FEMALE
}

enum Branch {
  ARMY
  NAVY
  AIR_FORCE
  SPACE_FORCE
  COAST_GUARD
  NATIONAL_GUARD
  MARINES
}
