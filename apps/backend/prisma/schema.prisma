generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id           Int      @id @default(autoincrement())
  created_at   DateTime @default(now())
  updated_at   DateTime
  categoryName String   @unique
  Item         Item[]
}

model Item {
  id          Int           @id @default(autoincrement())
  categoryId  Int
  created_at  DateTime      @default(now())
  updated_at  DateTime
  itemName    String        @unique
  Category    Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Transaction Transaction[]
}

model ServiceMember {
  userId         Int      @id
  country        String?
  state          String?
  created_at     DateTime @default(now())
  updated_at     DateTime
  branch         Branch
  addressLineOne String?
  addressLineTwo String?
  zipCode        String?
  city           String?
  User           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

model Transaction {
  id               Int              @id @default(autoincrement())
  itemId           Int
  transaction_type TransactionTypes
  notes            String?
  quantity         Int
  created_at       DateTime         @default(now())
  Item             Item             @relation(fields: [itemId], references: [id])
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  userType      UserType
  gender        Gender
  created_at    DateTime       @default(now())
  updated_at    DateTime
  firstName     String
  lastName      String
  phoneNumber   String?
  ServiceMember ServiceMember?
  Volunteer     Volunteer?
}

model Volunteer {
  userId     Int      @id
  created_at DateTime @default(now())
  updated_at DateTime
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Branch {
  ARMY
  NAVY
  AIR_FORCE
  SPACE_FORCE
  COAST_GUARD
  NATIONAL_GUARD
  MARINES
}

enum Gender {
  MALE
  FEMALE
}

enum TransactionTypes {
  ADDITION
  REMOVAL
  UPDATE
}

enum UserType {
  SERVICE_MEMBER
  VOLUNTEER
}
