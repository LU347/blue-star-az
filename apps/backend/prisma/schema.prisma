// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  SERVICE_MEMBER
  VOLUNTEER
}

enum Gender {
  MALE
  FEMALE
}

enum Branch {
  ARMY
  NAVY
  AIR_FORCE
  SPACE_FORCE
  COAST_GUARD
  NATIONAL_GUARD
  MARINES
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  firstName   String   @map("first_name")
  lastName    String   @map("last_name")
  phoneNumber String?  @map("phone_number")
  userType    UserType
  gender      Gender

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  serviceMember ServiceMember? @relation("UserServiceMember")
  volunteer     Volunteer?     @relation("UserVolunteer")
}

model ServiceMember {
  userId       Int     @id
  addressLine1 String
  addressLine2 String?
  branch       Branch
  country      String?
  state        String?
  user         User    @relation("UserServiceMember", fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Volunteer {
  userId Int  @id
  user   User @relation("UserVolunteer", fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
