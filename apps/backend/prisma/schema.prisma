// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  output = "@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  userType      UserType
  gender        Gender
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  firstName     String         @map("firstName")
  lastName      String         @map("lastName")
  phoneNumber   String?        @map("phoneNumber")
  serviceMember ServiceMember? @relation("UserServiceMember")
  volunteer     Volunteer?     @relation("UserVolunteer")

  otp        String?  
  otpExpires DateTime? 
}

model ServiceMember {
  userId         Int      @id
  country        String?
  state          String?
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  branch         Branch
  addressLineOne String?
  addressLineTwo String?
  zipCode        String?
  city           String?
  user           User     @relation("UserServiceMember", fields: [userId], references: [id], onDelete: Cascade)
}

model Volunteer {
  userId    Int      @id
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation("UserVolunteer", fields: [userId], references: [id], onDelete: Cascade)
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

model Category {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  categoryName String   @unique
  items        Item[]
}

model Item {
  id           Int           @id @default(autoincrement())
  categoryId   Int
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  itemName     String        @unique
  category     Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  transactions Transaction[]
}

model Transaction {
  id               Int              @id @default(autoincrement())
  itemId           Int
  transaction_type TransactionTypes
  notes            String?
  quantity         Int
  createdAt        DateTime         @default(now()) @map("created_at")
  item             Item             @relation(fields: [itemId], references: [id])
}

model OTP {
  id         String   @id @default(uuid())
  email      String   @unique
  otp        String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}


enum UserType {
  SERVICE_MEMBER
  VOLUNTEER
}

enum Gender {
  MALE
  FEMALE
}

enum Branch {
  ARMY
  NAVY
  AIR_FORCE
  SPACE_FORCE
  COAST_GUARD
  NATIONAL_GUARD
  MARINES
}

enum TransactionTypes {
  ADDITION
  REMOVAL
  UPDATE
}